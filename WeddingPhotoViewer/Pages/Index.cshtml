@page
@model IndexModel
@{
    ViewData["Title"] = "Wedding Photo Viewer";
}

@section Styles{
    <environment include="Development">
        <link rel="stylesheet" href="~/lib/justifiedGallery/dist/css/justifiedGallery.css" />
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="~/lib/justifiedGallery/dist/css/justifiedGallery.min.css" />
    </environment>
    <style>
        #mygallery {
            display: none;
        }

        .text-entry {
            font-size: xx-large;
            padding: 15px 0 0 15px;
        }
    </style>
}

<div id="mygallery" class="justified-gallery">
    <a href="https://s7d1.scene7.com/is/image/PETCO/dog-category-090617-369w-269h-hero-cutout-d">
        <img alt="Title 1" src="https://s7d1.scene7.com/is/image/PETCO/dog-category-090617-369w-269h-hero-cutout-d" />
    </a>
    <a href="https://www.cesarsway.com/sites/newcesarsway/files/styles/large_article_preview/public/Common-dog-behaviors-explained.jpg">
        <img alt="Title 2" src="https://www.cesarsway.com/sites/newcesarsway/files/styles/large_article_preview/public/Common-dog-behaviors-explained.jpg" />
    </a>
    <div class="text-entry">
        おめでとうございます。あああああああああああああああああああああああああああああああ
    </div>
    <a href="https://s7d2.scene7.com/is/image/PetSmart/PB1201_STORY_CARO-Authority-HealthyOutside-DOG-20160818">
        <img alt="Title 3" src="https://s7d2.scene7.com/is/image/PetSmart/PB1201_STORY_CARO-Authority-HealthyOutside-DOG-20160818" />
    </a>
    <a href="https://i.pinimg.com/originals/2e/3e/a1/2e3ea12b3417421b1a83cd2305d2b5f9.jpg">
        <img alt="Title 4" src="https://i.pinimg.com/originals/2e/3e/a1/2e3ea12b3417421b1a83cd2305d2b5f9.jpg" />
    </a>
    <div class="text-entry">
        おめでとうございます。あああああああああああああああああああああああああああああああ
    </div>
</div>

@section Scripts{
    <environment include="Development">
        <script type="text/javascript" src="~/lib/justifiedGallery/dist/js/jquery.justifiedGallery.js"></script>
    </environment>
    <environment exclude="Development">
        <script type="text/javascript" src="~/lib/justifiedGallery/dist/js/jquery.justifiedGallery.min.js"></script>
    </environment>
    <environment include="Development">
        <script type="text/javascript" src="~/lib/reconnecting-websocket/reconnecting-websocket.js"></script>
    </environment>
    <environment exclude="Development">
        <script type="text/javascript" src="~/lib/reconnecting-websocket/reconnecting-websocket.min.js"></script>
    </environment>

    <script type="text/javascript">
        var gallery = $("#mygallery");
        var images = [
        ];

        var movies = [
            "https://otsukatest.blob.core.windows.net/movies/frontier.mp4",
            "https://otsukatest.blob.core.windows.net/movies/sample1.mp4"
        ];

        gallery.justifiedGallery({
            rowHeight: 300,
            margins: 5
        });

        gallery.show();

        function getRandomInt(min, max) {
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }

        function createVideo(url) {
            return new Promise(function (resolve) {
                let video = document.createElement('video');
                video.muted = true;
                video.autoplay = true;
                video.loop = true;
                video.style = "width:100%";

                video.addEventListener("loadedmetadata", function () {
                    let height = this.videoHeight;
                    let width = this.videoWidth;
                    resolve({
                        height: height,
                        width: width,
                        video: video
                    });
                }, false);
                video.src = url;
            });
        }

        function addPhoto() {
            var image = images[getRandomInt(0, 3)];
            gallery.prepend(`<a href="${image}"><img alt= "Title 1" src= "${image}" /></a >`);
            gallery.justifiedGallery({
                rowHeight: 300,
                margins: 5
            });
        }
        function addPhotoByUrl(image) {
            gallery.prepend(`<a href="${image}"><img alt= "Title 1" src= "${image}" /></a >`);
            gallery.justifiedGallery({
                rowHeight: 300,
                margins: 5
            });
        }

        function addMovie() {
            var movie = movies[getRandomInt(0, 1)];
            createVideo(movie)
                .then(function (res) {
                    let div = $('<div/>', {
                        style: `width:${res.width}px;height:${res.height}px`
                    });
                    div.append(res.video)
                    gallery.prepend(div);
                    gallery.justifiedGallery({
                        rowHeight: 300,
                        margins: 5
                    });
                });
        }

        function addText(text) {
            let div = $('<div/>', {
                class: "text-entry",
                style: `width:${text.length * 7}px;height:auto`
            });
            div.text(text);
            gallery.prepend(div);
            gallery.justifiedGallery({
                rowHeight: 300,
                margins: 5
            });
        }
    </script>
    <script>
        var socket;

        var scheme = document.location.protocol == "https:" ? "wss" : "ws";
        var port = document.location.port ? (":" + document.location.port) : "";

        var connectionUrl = scheme + "://" + document.location.hostname + port + "/photo";

        function htmlEscape(str) {
            return str
                .replace(/&/g, '&amp;')
                .replace(/"/g, '&quot;')
                .replace(/'/g, '&#39;')
                .replace(/</g, '&lt;')
                .replace(/>/g, '&gt;');
        }

        window.onload = function () {
            socket = new ReconnectingWebSocket(connectionUrl);
            socket.onopen = function (event) {
                console.log("on open");
            };
            socket.onclose = function (event) {
                console.log("on close");
                console.dir(event);
            };
            socket.onerror = function () {
                console.log("on error");
            };
            socket.onmessage = function (event) {

                if (event.type == "message") {
                    if (event.data == "hey") {
                        socket.send("hoi");
                        console.log("ping received. pong send.");
                        return;
                    } else if (event.data == "hoi") {
                        console.log("pong received. ");
                        return;
                    }
                }
                var data = JSON.parse(event.data);
                var len = data.length;

                try {
                    for (var i = 0; i < len; i++) {
                        if (data[i].messageType == 2) {
                            createVideo(data[i].imageUrl);
                        } else if (data[i].messageType == 1 || data[i].messageType == 0) {
                            addPhotoByUrl(data[i].imageUrl);
                        } else {
                            console.log("unknown message type.");
                            continue;
                        }
                        console.log(data[i].name + ' / ' + data[i].imageUrl);
                    }
                } catch(e) {

                    console.log(e);
                }
            };
        };
    </script>


}